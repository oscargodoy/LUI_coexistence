#function to match all species combinations
combinator <- function(vec, n){
  
  #create an output matrix with nrow = number of combos & ncol = n
  M <- matrix(nrow = choose(length(vec), n), ncol = n)
  
  #set the first row of the matrix to the first combination
  M[1, 1:n] <- vec[1:n]
  
  #define a vector with the maximum values different columns can reach
  maxim <- vec[(length(vec) - (n - 1)):length(vec)]
  
  #loop i starting at row two for all the rows
  for (i in 2:nrow(M)){
    
    #copy the same values as in the previous row in order to check them
    M[i, 1:n] <- M[(i - 1), 1:n]
    
    #loop j for the columns, starting at column 2 (ncol(M) == n)
    for (j in 1:n){
      
      #conditions to match
      if (M[i, j] != maxim[j]){ #while the value is not the maximum
        if (j != n){ #if the column is not the last one yet
          #do nothing, continue to the next column
        } else { #if the column is, in fact, the last one
          M[i, j] <- vec[which(M[i, j] == vec) + 1] #write the following corresponding value
        }
      } else { #if it is actually the maximum value for that column
        M[i, (j - 1):n] <- vec[(which(M[i, (j - 1)] == vec) + 1):((which(M[i, (j - 1)] == vec) + 1) + ((n - j) + 1))] #write the following corresponding values from the previous columns to the end
        break #go to the following row
      }
    } #end j
  } #end i
  return(M) #return the matrix with all the combinations
} #end combinator()